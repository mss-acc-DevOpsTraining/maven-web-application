node {
    try {
        slackNotifications('STARTED')

	def mavenHome = tool name: "maven3.8.6"

	stage('CheckOutCode'){git branch: 'development', credentialsId: 'e42d1038-7312-46a0-9bf7-0e507b156519', url: 'https://github.com/mss-acc-DevOpsTraining/maven-web-application.git'}


	stage('Build'){sh "${mavenHome}/bin/mvn clean package"}

	stage('ExecuteSonarQubeReport'){sh "${mavenHome}/bin/mvn clean sonar:sonar"}

	stage('UploadArtifactIntoArtifactsRepo'){sh "${mavenHome}/bin/mvn clean deploy"}

	stage('DeployAppIntoTomcatServer'){sshagent(['e92b5790-e123-4008-aadf-546b90a46f70'])
	{sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.41.16:/opt/apache-tomcat-9.0.65/webapps"}}

  

  } catch (e) {
  
    slackNotifications(currentBuild.result)
    throw e
  } finally {
 	slackNotifications(currentBuild.result)
  }
}//NODE CLOSING


def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
